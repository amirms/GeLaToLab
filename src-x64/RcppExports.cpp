// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// normalizeVector
SEXP normalizeVector(SEXP v);
RcppExport SEXP GeLaToLab_normalizeVector(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type v(vSEXP);
    __result = Rcpp::wrap(normalizeVector(v));
    return __result;
END_RCPP
}
// evaluateLQ
SEXP evaluateLQ(SEXP d, SEXP g);
RcppExport SEXP GeLaToLab_evaluateLQ(SEXP dSEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    Rcpp::traits::input_parameter< SEXP >::type g(gSEXP);
    __result = Rcpp::wrap(evaluateLQ(d, g));
    return __result;
END_RCPP
}
// evaluateMQ
SEXP evaluateMQ(SEXP d, SEXP g);
RcppExport SEXP GeLaToLab_evaluateMQ(SEXP dSEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    Rcpp::traits::input_parameter< SEXP >::type g(gSEXP);
    __result = Rcpp::wrap(evaluateMQ(d, g));
    return __result;
END_RCPP
}
// computeRandomNeighbor
NumericVector computeRandomNeighbor(NumericVector group, int columns, int k);
RcppExport SEXP GeLaToLab_computeRandomNeighbor(SEXP groupSEXP, SEXP columnsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type columns(columnsSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    __result = Rcpp::wrap(computeRandomNeighbor(group, columns, k));
    return __result;
END_RCPP
}
// computeRandomNeighbors
SEXP computeRandomNeighbors(NumericVector group, int columns, int k, int n);
RcppExport SEXP GeLaToLab_computeRandomNeighbors(SEXP groupSEXP, SEXP columnsSEXP, SEXP kSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type columns(columnsSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(computeRandomNeighbors(group, columns, k, n));
    return __result;
END_RCPP
}
// collectNondominated
SEXP collectNondominated(SEXP pop, SEXP arch);
RcppExport SEXP GeLaToLab_collectNondominated(SEXP popSEXP, SEXP archSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type pop(popSEXP);
    Rcpp::traits::input_parameter< SEXP >::type arch(archSEXP);
    __result = Rcpp::wrap(collectNondominated(pop, arch));
    return __result;
END_RCPP
}
